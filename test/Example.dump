
Example.out:     file format elf64-x86-64

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000400238  0000000000400238  00000238  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  0000000000400254  0000000000400254  00000254  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .hash         00000028  0000000000400278  0000000000400278  00000278  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     0000001c  00000000004002a0  00000000004002a0  000002a0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000078  00000000004002c0  00000000004002c0  000002c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       00000078  0000000000400338  0000000000400338  00000338  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  0000000a  00000000004003b0  00000000004003b0  000003b0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000040  00000000004003c0  00000000004003c0  000003c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     00000030  0000000000400400  0000000000400400  00000400  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.plt     00000030  0000000000400430  0000000000400430  00000430  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000017  0000000000400460  0000000000400460  00000460  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000030  0000000000400480  0000000000400480  00000480  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text         000002c2  00000000004004b0  00000000004004b0  000004b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .fini         00000009  0000000000400774  0000000000400774  00000774  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .rodata       00000004  0000000000400780  0000000000400780  00000780  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 .eh_frame_hdr 0000004c  0000000000400784  0000000000400784  00000784  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame     00000138  00000000004007d0  00000000004007d0  000007d0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .init_array   00000008  0000000000600dd0  0000000000600dd0  00000dd0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 18 .fini_array   00000008  0000000000600dd8  0000000000600dd8  00000dd8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .dynamic      00000210  0000000000600de0  0000000000600de0  00000de0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .got          00000010  0000000000600ff0  0000000000600ff0  00000ff0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got.plt      00000028  0000000000601000  0000000000601000  00001000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .data         00000010  0000000000601028  0000000000601028  00001028  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .bss          00000008  0000000000601038  0000000000601038  00001038  2**0
                  ALLOC
 24 .comment      00000056  0000000000000000  0000000000000000  00001038  2**0
                  CONTENTS, READONLY
 25 .debug_pubnames 00000042  0000000000000000  0000000000000000  0000108e  2**0
                  CONTENTS, READONLY, DEBUGGING
 26 .debug_info   00000194  0000000000000000  0000000000000000  000010d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 27 .debug_abbrev 000000b3  0000000000000000  0000000000000000  00001264  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_line   000000d3  0000000000000000  0000000000000000  00001317  2**0
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_str    000000de  0000000000000000  0000000000000000  000013ea  2**0
                  CONTENTS, READONLY, DEBUGGING
 30 .debug_macinfo 00000001  0000000000000000  0000000000000000  000014c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 31 .debug_pubtypes 00000044  0000000000000000  0000000000000000  000014c9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	insb   (%dx),%es:(%rdi)
  40023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  400246:	78 2d                	js     400275 <_init-0x1eb>
  400248:	78 38                	js     400282 <_init-0x1de>
  40024a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
  400250:	6f                   	outsl  %ds:(%rsi),(%dx)
  400251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	10 00                	adc    %al,(%rax)
  40025a:	00 00                	add    %al,(%rax)
  40025c:	01 00                	add    %eax,(%rax)
  40025e:	00 00                	add    %al,(%rax)
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push %rbp
  400263:	00 00                	add    %al,(%rax)
  400265:	00 00                	add    %al,(%rax)
  400267:	00 03                	add    %al,(%rbx)
  400269:	00 00                	add    %al,(%rax)
  40026b:	00 02                	add    %al,(%rdx)
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 00                	add    %al,(%rax)
  400271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .hash:

0000000000400278 <.hash>:
  400278:	03 00                	add    (%rax),%eax
  40027a:	00 00                	add    %al,(%rax)
  40027c:	05 00 00 00 04       	add    $0x4000000,%eax
  400281:	00 00                	add    %al,(%rax)
  400283:	00 03                	add    %al,(%rbx)
	...
  400295:	00 00                	add    %al,(%rax)
  400297:	00 02                	add    %al,(%rdx)
  400299:	00 00                	add    %al,(%rax)
  40029b:	00 01                	add    %al,(%rcx)
  40029d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

00000000004002a0 <.gnu.hash>:
  4002a0:	01 00                	add    %eax,(%rax)
  4002a2:	00 00                	add    %al,(%rax)
  4002a4:	01 00                	add    %eax,(%rax)
  4002a6:	00 00                	add    %al,(%rax)
  4002a8:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000004002c0 <.dynsym>:
	...
  4002d8:	1f                   	(bad)  
  4002d9:	00 00                	add    %al,(%rax)
  4002db:	00 12                	add    %dl,(%rdx)
	...
  4002ed:	00 00                	add    %al,(%rax)
  4002ef:	00 25 00 00 00 12    	add    %ah,0x12000000(%rip)        # 124002f5 <_end+0x11dff2b5>
	...
  400305:	00 00                	add    %al,(%rax)
  400307:	00 4e 00             	add    %cl,0x0(%rsi)
  40030a:	00 00                	add    %al,(%rax)
  40030c:	12 00                	adc    (%rax),%al
	...
  40031e:	00 00                	add    %al,(%rax)
  400320:	10 00                	adc    %al,(%rax)
  400322:	00 00                	add    %al,(%rax)
  400324:	20 00                	and    %al,(%rax)
	...

Disassembly of section .dynstr:

0000000000400338 <.dynstr>:
  400338:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  40033c:	73 74                	jae    4003b2 <_init-0xae>
  40033e:	64 63 2b             	movslq %fs:(%rbx),%ebp
  400341:	2b 2e                	sub    (%rsi),%ebp
  400343:	73 6f                	jae    4003b4 <_init-0xac>
  400345:	2e 36 00 5f 5f       	cs add %bl,%ss:0x5f(%rdi)
  40034a:	67 6d                	insl   (%dx),%es:(%edi)
  40034c:	6f                   	outsl  %ds:(%rsi),(%dx)
  40034d:	6e                   	outsb  %ds:(%rsi),(%dx)
  40034e:	5f                   	pop    %rdi
  40034f:	73 74                	jae    4003c5 <_init-0x9b>
  400351:	61                   	(bad)  
  400352:	72 74                	jb     4003c8 <_init-0x98>
  400354:	5f                   	pop    %rdi
  400355:	5f                   	pop    %rdi
  400356:	00 5f 5a             	add    %bl,0x5a(%rdi)
  400359:	6e                   	outsb  %ds:(%rsi),(%dx)
  40035a:	61                   	(bad)  
  40035b:	6d                   	insl   (%dx),%es:(%rdi)
  40035c:	00 5f 5a             	add    %bl,0x5a(%rdi)
  40035f:	64 61                	fs (bad) 
  400361:	50                   	push   %rax
  400362:	76 00                	jbe    400364 <_init-0xfc>
  400364:	6c                   	insb   (%dx),%es:(%rdi)
  400365:	69 62 6d 2e 73 6f 2e 	imul   $0x2e6f732e,0x6d(%rdx),%esp
  40036c:	36 00 6c 69 62       	add    %ch,%ss:0x62(%rcx,%rbp,2)
  400371:	67 63 63 5f          	movslq 0x5f(%ebx),%esp
  400375:	73 2e                	jae    4003a5 <_init-0xbb>
  400377:	73 6f                	jae    4003e8 <_init-0x78>
  400379:	2e 31 00             	xor    %eax,%cs:(%rax)
  40037c:	6c                   	insb   (%dx),%es:(%rdi)
  40037d:	69 62 63 2e 73 6f 2e 	imul   $0x2e6f732e,0x63(%rdx),%esp
  400384:	36 00 5f 5f          	add    %bl,%ss:0x5f(%rdi)
  400388:	6c                   	insb   (%dx),%es:(%rdi)
  400389:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  400390:	72 74                	jb     400406 <_init-0x5a>
  400392:	5f                   	pop    %rdi
  400393:	6d                   	insl   (%dx),%es:(%rdi)
  400394:	61                   	(bad)  
  400395:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
  40039c:	43 5f                	rex.XB pop %r15
  40039e:	32 2e                	xor    (%rsi),%ch
  4003a0:	32 2e                	xor    (%rsi),%ch
  4003a2:	35 00 47 4c 49       	xor    $0x494c4700,%eax
  4003a7:	42                   	rex.X
  4003a8:	43 58                	rex.XB pop %r8
  4003aa:	58                   	pop    %rax
  4003ab:	5f                   	pop    %rdi
  4003ac:	33 2e                	xor    (%rsi),%ebp
  4003ae:	34 00                	xor    $0x0,%al

Disassembly of section .gnu.version:

00000000004003b0 <.gnu.version>:
  4003b0:	00 00                	add    %al,(%rax)
  4003b2:	02 00                	add    (%rax),%al
  4003b4:	02 00                	add    (%rax),%al
  4003b6:	03 00                	add    (%rax),%eax
	...

Disassembly of section .gnu.version_r:

00000000004003c0 <.gnu.version_r>:
  4003c0:	01 00                	add    %eax,(%rax)
  4003c2:	01 00                	add    %eax,(%rax)
  4003c4:	44 00 00             	add    %r8b,(%rax)
  4003c7:	00 10                	add    %dl,(%rax)
  4003c9:	00 00                	add    %al,(%rax)
  4003cb:	00 20                	add    %ah,(%rax)
  4003cd:	00 00                	add    %al,(%rax)
  4003cf:	00 75 1a             	add    %dh,0x1a(%rbp)
  4003d2:	69 09 00 00 03 00    	imul   $0x30000,(%rcx),%ecx
  4003d8:	60                   	(bad)  
  4003d9:	00 00                	add    %al,(%rax)
  4003db:	00 00                	add    %al,(%rax)
  4003dd:	00 00                	add    %al,(%rax)
  4003df:	00 01                	add    %al,(%rcx)
  4003e1:	00 01                	add    %al,(%rcx)
  4003e3:	00 01                	add    %al,(%rcx)
  4003e5:	00 00                	add    %al,(%rax)
  4003e7:	00 10                	add    %dl,(%rax)
  4003e9:	00 00                	add    %al,(%rax)
  4003eb:	00 00                	add    %al,(%rax)
  4003ed:	00 00                	add    %al,(%rax)
  4003ef:	00 74 29 92          	add    %dh,-0x6e(%rcx,%rbp,1)
  4003f3:	08 00                	or     %al,(%rax)
  4003f5:	00 02                	add    %al,(%rdx)
  4003f7:	00 6c 00 00          	add    %ch,0x0(%rax,%rax,1)
  4003fb:	00 00                	add    %al,(%rax)
  4003fd:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000400400 <.rela.dyn>:
  400400:	f0 0f 60 00          	lock punpcklbw (%rax),%mm0
  400404:	00 00                	add    %al,(%rax)
  400406:	00 00                	add    %al,(%rax)
  400408:	06                   	(bad)  
  400409:	00 00                	add    %al,(%rax)
  40040b:	00 03                	add    %al,(%rbx)
	...
  400415:	00 00                	add    %al,(%rax)
  400417:	00 f8                	add    %bh,%al
  400419:	0f 60 00             	punpcklbw (%rax),%mm0
  40041c:	00 00                	add    %al,(%rax)
  40041e:	00 00                	add    %al,(%rax)
  400420:	06                   	(bad)  
  400421:	00 00                	add    %al,(%rax)
  400423:	00 04 00             	add    %al,(%rax,%rax,1)
	...

Disassembly of section .rela.plt:

0000000000400430 <.rela.plt>:
  400430:	18 10                	sbb    %dl,(%rax)
  400432:	60                   	(bad)  
  400433:	00 00                	add    %al,(%rax)
  400435:	00 00                	add    %al,(%rax)
  400437:	00 07                	add    %al,(%rdi)
  400439:	00 00                	add    %al,(%rax)
  40043b:	00 01                	add    %al,(%rcx)
	...
  400445:	00 00                	add    %al,(%rax)
  400447:	00 20                	add    %ah,(%rax)
  400449:	10 60 00             	adc    %ah,0x0(%rax)
  40044c:	00 00                	add    %al,(%rax)
  40044e:	00 00                	add    %al,(%rax)
  400450:	07                   	(bad)  
  400451:	00 00                	add    %al,(%rax)
  400453:	00 02                	add    %al,(%rdx)
	...

Disassembly of section .init:

0000000000400460 <_init>:
  400460:	48 83 ec 08          	sub    $0x8,%rsp
  400464:	48 8b 05 8d 0b 20 00 	mov    0x200b8d(%rip),%rax        # 600ff8 <__gmon_start__>
  40046b:	48 85 c0             	test   %rax,%rax
  40046e:	74 02                	je     400472 <_init+0x12>
  400470:	ff d0                	callq  *%rax
  400472:	48 83 c4 08          	add    $0x8,%rsp
  400476:	c3                   	retq   

Disassembly of section .plt:

0000000000400480 <.plt>:
  400480:	ff 35 82 0b 20 00    	pushq  0x200b82(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400486:	ff 25 84 0b 20 00    	jmpq   *0x200b84(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40048c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400490 <_Znam@plt>:
  400490:	ff 25 82 0b 20 00    	jmpq   *0x200b82(%rip)        # 601018 <_Znam@GLIBCXX_3.4>
  400496:	68 00 00 00 00       	pushq  $0x0
  40049b:	e9 e0 ff ff ff       	jmpq   400480 <.plt>

00000000004004a0 <_ZdaPv@plt>:
  4004a0:	ff 25 7a 0b 20 00    	jmpq   *0x200b7a(%rip)        # 601020 <_ZdaPv@GLIBCXX_3.4>
  4004a6:	68 01 00 00 00       	pushq  $0x1
  4004ab:	e9 d0 ff ff ff       	jmpq   400480 <.plt>

Disassembly of section .text:

00000000004004b0 <_start>:
  4004b0:	31 ed                	xor    %ebp,%ebp
  4004b2:	49 89 d1             	mov    %rdx,%r9
  4004b5:	5e                   	pop    %rsi
  4004b6:	48 89 e2             	mov    %rsp,%rdx
  4004b9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4004bd:	50                   	push   %rax
  4004be:	54                   	push   %rsp
  4004bf:	49 c7 c0 70 07 40 00 	mov    $0x400770,%r8
  4004c6:	48 c7 c1 00 07 40 00 	mov    $0x400700,%rcx
  4004cd:	48 c7 c7 a0 05 40 00 	mov    $0x4005a0,%rdi
  4004d4:	ff 15 16 0b 20 00    	callq  *0x200b16(%rip)        # 600ff0 <__libc_start_main@GLIBC_2.2.5>
  4004da:	f4                   	hlt    
  4004db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004004e0 <_dl_relocate_static_pie>:
  4004e0:	f3 c3                	repz retq 
  4004e2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4004e9:	00 00 00 
  4004ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004004f0 <deregister_tm_clones>:
  4004f0:	b8 38 10 60 00       	mov    $0x601038,%eax
  4004f5:	48 3d 38 10 60 00    	cmp    $0x601038,%rax
  4004fb:	74 13                	je     400510 <deregister_tm_clones+0x20>
  4004fd:	b8 00 00 00 00       	mov    $0x0,%eax
  400502:	48 85 c0             	test   %rax,%rax
  400505:	74 09                	je     400510 <deregister_tm_clones+0x20>
  400507:	bf 38 10 60 00       	mov    $0x601038,%edi
  40050c:	ff e0                	jmpq   *%rax
  40050e:	66 90                	xchg   %ax,%ax
  400510:	c3                   	retq   
  400511:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400516:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40051d:	00 00 00 

0000000000400520 <register_tm_clones>:
  400520:	be 38 10 60 00       	mov    $0x601038,%esi
  400525:	48 81 ee 38 10 60 00 	sub    $0x601038,%rsi
  40052c:	48 c1 fe 03          	sar    $0x3,%rsi
  400530:	48 89 f0             	mov    %rsi,%rax
  400533:	48 c1 e8 3f          	shr    $0x3f,%rax
  400537:	48 01 c6             	add    %rax,%rsi
  40053a:	48 d1 fe             	sar    %rsi
  40053d:	74 11                	je     400550 <register_tm_clones+0x30>
  40053f:	b8 00 00 00 00       	mov    $0x0,%eax
  400544:	48 85 c0             	test   %rax,%rax
  400547:	74 07                	je     400550 <register_tm_clones+0x30>
  400549:	bf 38 10 60 00       	mov    $0x601038,%edi
  40054e:	ff e0                	jmpq   *%rax
  400550:	c3                   	retq   
  400551:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400556:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40055d:	00 00 00 

0000000000400560 <__do_global_dtors_aux>:
  400560:	80 3d d1 0a 20 00 00 	cmpb   $0x0,0x200ad1(%rip)        # 601038 <__TMC_END__>
  400567:	75 17                	jne    400580 <__do_global_dtors_aux+0x20>
  400569:	55                   	push   %rbp
  40056a:	48 89 e5             	mov    %rsp,%rbp
  40056d:	e8 7e ff ff ff       	callq  4004f0 <deregister_tm_clones>
  400572:	c6 05 bf 0a 20 00 01 	movb   $0x1,0x200abf(%rip)        # 601038 <__TMC_END__>
  400579:	5d                   	pop    %rbp
  40057a:	c3                   	retq   
  40057b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400580:	c3                   	retq   
  400581:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400586:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40058d:	00 00 00 

0000000000400590 <frame_dummy>:
  400590:	eb 8e                	jmp    400520 <register_tm_clones>
  400592:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400599:	00 00 00 
  40059c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004005a0 <main>:
  4005a0:	55                   	push   %rbp
  4005a1:	48 89 e5             	mov    %rsp,%rbp
  4005a4:	48 83 ec 70          	sub    $0x70,%rsp
  4005a8:	b8 80 0c 00 00       	mov    $0xc80,%eax
  4005ad:	89 c1                	mov    %eax,%ecx
  4005af:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4005b6:	b8 80 0c 00 00       	mov    $0xc80,%eax
  4005bb:	89 c7                	mov    %eax,%edi
  4005bd:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)

00000000004005c1 <.GTyCHEExample.cpp__Znam>:
  4005c1:	e8 ca fe ff ff       	callq  400490 <_Znam@plt>
  4005c6:	31 d2                	xor    %edx,%edx
  4005c8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4005cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4005d0:	c7 80 4c 01 00 00 01 	movl   $0x1,0x14c(%rax)
  4005d7:	00 00 00 
  4005da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4005de:	48 05 40 01 00 00    	add    $0x140,%rax
  4005e4:	48 83 c0 08          	add    $0x8,%rax
  4005e8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4005ec:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  4005f0:	31 f6                	xor    %esi,%esi
  4005f2:	89 55 d4             	mov    %edx,-0x2c(%rbp)
  4005f5:	e8 c6 00 00 00       	callq  4006c0 <_ZL8getValueIiET_PS0_i>
  4005fa:	ba 01 00 00 00       	mov    $0x1,%edx
  4005ff:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  400603:	be 01 00 00 00       	mov    $0x1,%esi
  400608:	89 45 d0             	mov    %eax,-0x30(%rbp)
  40060b:	89 55 cc             	mov    %edx,-0x34(%rbp)
  40060e:	e8 ad 00 00 00       	callq  4006c0 <_ZL8getValueIiET_PS0_i>
  400613:	ba 02 00 00 00       	mov    $0x2,%edx
  400618:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  40061c:	be 02 00 00 00       	mov    $0x2,%esi
  400621:	89 45 c8             	mov    %eax,-0x38(%rbp)
  400624:	89 55 c4             	mov    %edx,-0x3c(%rbp)
  400627:	e8 94 00 00 00       	callq  4006c0 <_ZL8getValueIiET_PS0_i>
  40062c:	ba 03 00 00 00       	mov    $0x3,%edx
  400631:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  400635:	be 03 00 00 00       	mov    $0x3,%esi
  40063a:	89 45 c0             	mov    %eax,-0x40(%rbp)
  40063d:	89 55 bc             	mov    %edx,-0x44(%rbp)
  400640:	e8 7b 00 00 00       	callq  4006c0 <_ZL8getValueIiET_PS0_i>
  400645:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  40064a:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  40064e:	be ff ff ff ff       	mov    $0xffffffff,%esi
  400653:	89 45 b8             	mov    %eax,-0x48(%rbp)
  400656:	89 55 b4             	mov    %edx,-0x4c(%rbp)
  400659:	e8 62 00 00 00       	callq  4006c0 <_ZL8getValueIiET_PS0_i>
  40065e:	31 d2                	xor    %edx,%edx
  400660:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  400664:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  400668:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  40066c:	31 f6                	xor    %esi,%esi
  40066e:	89 45 b0             	mov    %eax,-0x50(%rbp)
  400671:	89 55 ac             	mov    %edx,-0x54(%rbp)

0000000000400674 <.GTyCHEExample.cpp__ZL8getValueIdET_PS0_i>:
  400674:	e8 67 00 00 00       	callq  4006e0 <_ZL8getValueIdET_PS0_i>
  400679:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  40067d:	48 83 f9 00          	cmp    $0x0,%rcx
  400681:	f2 0f 11 45 a0       	movsd  %xmm0,-0x60(%rbp)
  400686:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  40068a:	0f 84 0c 00 00 00    	je     40069c <.GTyCHEExample.cpp__ZdaPv+0x5>
  400690:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  400694:	48 89 c7             	mov    %rax,%rdi

0000000000400697 <.GTyCHEExample.cpp__ZdaPv>:
  400697:	e8 04 fe ff ff       	callq  4004a0 <_ZdaPv@plt>
  40069c:	31 c0                	xor    %eax,%eax
  40069e:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  4006a2:	31 f6                	xor    %esi,%esi
  4006a4:	89 45 94             	mov    %eax,-0x6c(%rbp)

00000000004006a7 <.GTyCHEExample.cpp__ZL8getValueIiET_PS0_i>:
  4006a7:	e8 14 00 00 00       	callq  4006c0 <_ZL8getValueIiET_PS0_i>
  4006ac:	31 f6                	xor    %esi,%esi
  4006ae:	89 45 90             	mov    %eax,-0x70(%rbp)
  4006b1:	89 f0                	mov    %esi,%eax
  4006b3:	48 83 c4 70          	add    $0x70,%rsp
  4006b7:	5d                   	pop    %rbp
  4006b8:	c3                   	retq   
  4006b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004006c0 <_ZL8getValueIiET_PS0_i>:
  4006c0:	55                   	push   %rbp
  4006c1:	48 89 e5             	mov    %rsp,%rbp
  4006c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4006c8:	89 75 f4             	mov    %esi,-0xc(%rbp)
  4006cb:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  4006cf:	48 63 45 f4          	movslq -0xc(%rbp),%rax
  4006d3:	8b 04 87             	mov    (%rdi,%rax,4),%eax
  4006d6:	5d                   	pop    %rbp
  4006d7:	c3                   	retq   
  4006d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4006df:	00 

00000000004006e0 <_ZL8getValueIdET_PS0_i>:
  4006e0:	55                   	push   %rbp
  4006e1:	48 89 e5             	mov    %rsp,%rbp
  4006e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4006e8:	89 75 f4             	mov    %esi,-0xc(%rbp)
  4006eb:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  4006ef:	48 63 45 f4          	movslq -0xc(%rbp),%rax
  4006f3:	f2 0f 10 04 c7       	movsd  (%rdi,%rax,8),%xmm0
  4006f8:	5d                   	pop    %rbp
  4006f9:	c3                   	retq   
  4006fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400700 <__libc_csu_init>:
  400700:	41 57                	push   %r15
  400702:	41 56                	push   %r14
  400704:	49 89 d7             	mov    %rdx,%r15
  400707:	41 55                	push   %r13
  400709:	41 54                	push   %r12
  40070b:	4c 8d 25 be 06 20 00 	lea    0x2006be(%rip),%r12        # 600dd0 <__frame_dummy_init_array_entry>
  400712:	55                   	push   %rbp
  400713:	48 8d 2d be 06 20 00 	lea    0x2006be(%rip),%rbp        # 600dd8 <__init_array_end>
  40071a:	53                   	push   %rbx
  40071b:	41 89 fd             	mov    %edi,%r13d
  40071e:	49 89 f6             	mov    %rsi,%r14
  400721:	4c 29 e5             	sub    %r12,%rbp
  400724:	48 83 ec 08          	sub    $0x8,%rsp
  400728:	48 c1 fd 03          	sar    $0x3,%rbp
  40072c:	e8 2f fd ff ff       	callq  400460 <_init>
  400731:	48 85 ed             	test   %rbp,%rbp
  400734:	74 20                	je     400756 <__libc_csu_init+0x56>
  400736:	31 db                	xor    %ebx,%ebx
  400738:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40073f:	00 
  400740:	4c 89 fa             	mov    %r15,%rdx
  400743:	4c 89 f6             	mov    %r14,%rsi
  400746:	44 89 ef             	mov    %r13d,%edi
  400749:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40074d:	48 83 c3 01          	add    $0x1,%rbx
  400751:	48 39 dd             	cmp    %rbx,%rbp
  400754:	75 ea                	jne    400740 <__libc_csu_init+0x40>
  400756:	48 83 c4 08          	add    $0x8,%rsp
  40075a:	5b                   	pop    %rbx
  40075b:	5d                   	pop    %rbp
  40075c:	41 5c                	pop    %r12
  40075e:	41 5d                	pop    %r13
  400760:	41 5e                	pop    %r14
  400762:	41 5f                	pop    %r15
  400764:	c3                   	retq   
  400765:	90                   	nop
  400766:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40076d:	00 00 00 

0000000000400770 <__libc_csu_fini>:
  400770:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400774 <_fini>:
  400774:	48 83 ec 08          	sub    $0x8,%rsp
  400778:	48 83 c4 08          	add    $0x8,%rsp
  40077c:	c3                   	retq   

Disassembly of section .rodata:

0000000000400780 <_IO_stdin_used>:
  400780:	01 00                	add    %eax,(%rax)
  400782:	02 00                	add    (%rax),%al

Disassembly of section .eh_frame_hdr:

0000000000400784 <__GNU_EH_FRAME_HDR>:
  400784:	01 1b                	add    %ebx,(%rbx)
  400786:	03 3b                	add    (%rbx),%edi
  400788:	48 00 00             	rex.W add %al,(%rax)
  40078b:	00 08                	add    %cl,(%rax)
  40078d:	00 00                	add    %al,(%rax)
  40078f:	00 fc                	add    %bh,%ah
  400791:	fc                   	cld    
  400792:	ff                   	(bad)  
  400793:	ff a4 00 00 00 2c fd 	jmpq   *-0x2d40000(%rax,%rax,1)
  40079a:	ff                   	(bad)  
  40079b:	ff 64 00 00          	jmpq   *0x0(%rax,%rax,1)
  40079f:	00 5c fd ff          	add    %bl,-0x1(%rbp,%rdi,8)
  4007a3:	ff 90 00 00 00 1c    	callq  *0x1c000000(%rax)
  4007a9:	fe                   	(bad)  
  4007aa:	ff                   	(bad)  
  4007ab:	ff cc                	dec    %esp
  4007ad:	00 00                	add    %al,(%rax)
  4007af:	00 3c ff             	add    %bh,(%rdi,%rdi,8)
  4007b2:	ff                   	(bad)  
  4007b3:	ff                   	(bad)  
  4007b4:	e8 00 00 00 5c       	callq  5c4007b9 <_end+0x5bdff779>
  4007b9:	ff                   	(bad)  
  4007ba:	ff                   	(bad)  
  4007bb:	ff 04 01             	incl   (%rcx,%rax,1)
  4007be:	00 00                	add    %al,(%rax)
  4007c0:	7c ff                	jl     4007c1 <__GNU_EH_FRAME_HDR+0x3d>
  4007c2:	ff                   	(bad)  
  4007c3:	ff 24 01             	jmpq   *(%rcx,%rax,1)
  4007c6:	00 00                	add    %al,(%rax)
  4007c8:	ec                   	in     (%dx),%al
  4007c9:	ff                   	(bad)  
  4007ca:	ff                   	(bad)  
  4007cb:	ff 6c 01 00          	ljmp   *0x0(%rcx,%rax,1)
	...

Disassembly of section .eh_frame:

00000000004007d0 <__FRAME_END__-0x134>:
  4007d0:	14 00                	adc    $0x0,%al
  4007d2:	00 00                	add    %al,(%rax)
  4007d4:	00 00                	add    %al,(%rax)
  4007d6:	00 00                	add    %al,(%rax)
  4007d8:	01 7a 52             	add    %edi,0x52(%rdx)
  4007db:	00 01                	add    %al,(%rcx)
  4007dd:	78 10                	js     4007ef <__GNU_EH_FRAME_HDR+0x6b>
  4007df:	01 1b                	add    %ebx,(%rbx)
  4007e1:	0c 07                	or     $0x7,%al
  4007e3:	08 90 01 07 10 10    	or     %dl,0x10100701(%rax)
  4007e9:	00 00                	add    %al,(%rax)
  4007eb:	00 1c 00             	add    %bl,(%rax,%rax,1)
  4007ee:	00 00                	add    %al,(%rax)
  4007f0:	c0 fc ff             	sar    $0xff,%ah
  4007f3:	ff 2b                	ljmp   *(%rbx)
  4007f5:	00 00                	add    %al,(%rax)
  4007f7:	00 00                	add    %al,(%rax)
  4007f9:	00 00                	add    %al,(%rax)
  4007fb:	00 14 00             	add    %dl,(%rax,%rax,1)
  4007fe:	00 00                	add    %al,(%rax)
  400800:	00 00                	add    %al,(%rax)
  400802:	00 00                	add    %al,(%rax)
  400804:	01 7a 52             	add    %edi,0x52(%rdx)
  400807:	00 01                	add    %al,(%rcx)
  400809:	78 10                	js     40081b <__GNU_EH_FRAME_HDR+0x97>
  40080b:	01 1b                	add    %ebx,(%rbx)
  40080d:	0c 07                	or     $0x7,%al
  40080f:	08 90 01 00 00 10    	or     %dl,0x10000001(%rax)
  400815:	00 00                	add    %al,(%rax)
  400817:	00 1c 00             	add    %bl,(%rax,%rax,1)
  40081a:	00 00                	add    %al,(%rax)
  40081c:	c4                   	(bad)  
  40081d:	fc                   	cld    
  40081e:	ff                   	(bad)  
  40081f:	ff 02                	incl   (%rdx)
  400821:	00 00                	add    %al,(%rax)
  400823:	00 00                	add    %al,(%rax)
  400825:	00 00                	add    %al,(%rax)
  400827:	00 24 00             	add    %ah,(%rax,%rax,1)
  40082a:	00 00                	add    %al,(%rax)
  40082c:	30 00                	xor    %al,(%rax)
  40082e:	00 00                	add    %al,(%rax)
  400830:	50                   	push   %rax
  400831:	fc                   	cld    
  400832:	ff                   	(bad)  
  400833:	ff 30                	pushq  (%rax)
  400835:	00 00                	add    %al,(%rax)
  400837:	00 00                	add    %al,(%rax)
  400839:	0e                   	(bad)  
  40083a:	10 46 0e             	adc    %al,0xe(%rsi)
  40083d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  400840:	0b 77 08             	or     0x8(%rdi),%esi
  400843:	80 00 3f             	addb   $0x3f,(%rax)
  400846:	1a 3b                	sbb    (%rbx),%bh
  400848:	2a 33                	sub    (%rbx),%dh
  40084a:	24 22                	and    $0x22,%al
  40084c:	00 00                	add    %al,(%rax)
  40084e:	00 00                	add    %al,(%rax)
  400850:	18 00                	sbb    %al,(%rax)
  400852:	00 00                	add    %al,(%rax)
  400854:	58                   	pop    %rax
  400855:	00 00                	add    %al,(%rax)
  400857:	00 48 fd             	add    %cl,-0x3(%rax)
  40085a:	ff                   	(bad)  
  40085b:	ff 19                	lcall  *(%rcx)
  40085d:	01 00                	add    %eax,(%rax)
  40085f:	00 00                	add    %al,(%rax)
  400861:	41 0e                	rex.B (bad) 
  400863:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400869:	00 00                	add    %al,(%rax)
  40086b:	00 18                	add    %bl,(%rax)
  40086d:	00 00                	add    %al,(%rax)
  40086f:	00 74 00 00          	add    %dh,0x0(%rax,%rax,1)
  400873:	00 4c fe ff          	add    %cl,-0x1(%rsi,%rdi,8)
  400877:	ff 18                	lcall  *(%rax)
  400879:	00 00                	add    %al,(%rax)
  40087b:	00 00                	add    %al,(%rax)
  40087d:	41 0e                	rex.B (bad) 
  40087f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400885:	00 00                	add    %al,(%rax)
  400887:	00 1c 00             	add    %bl,(%rax,%rax,1)
  40088a:	00 00                	add    %al,(%rax)
  40088c:	90                   	nop
  40088d:	00 00                	add    %al,(%rax)
  40088f:	00 50 fe             	add    %dl,-0x2(%rax)
  400892:	ff                   	(bad)  
  400893:	ff 1a                	lcall  *(%rdx)
  400895:	00 00                	add    %al,(%rax)
  400897:	00 00                	add    %al,(%rax)
  400899:	41 0e                	rex.B (bad) 
  40089b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  4008a1:	00 00                	add    %al,(%rax)
  4008a3:	00 00                	add    %al,(%rax)
  4008a5:	00 00                	add    %al,(%rax)
  4008a7:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
  4008ab:	00 b0 00 00 00 50    	add    %dh,0x50000000(%rax)
  4008b1:	fe                   	(bad)  
  4008b2:	ff                   	(bad)  
  4008b3:	ff 65 00             	jmpq   *0x0(%rbp)
  4008b6:	00 00                	add    %al,(%rax)
  4008b8:	00 42 0e             	add    %al,0xe(%rdx)
  4008bb:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
  4008c1:	8e 03                	mov    (%rbx),%es
  4008c3:	45 0e                	rex.RB (bad) 
  4008c5:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
  4008cb:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86701719 <_end+0xffffffff861006d9>
  4008d1:	06                   	(bad)  
  4008d2:	48 0e                	rex.W (bad) 
  4008d4:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
  4008da:	72 0e                	jb     4008ea <__GNU_EH_FRAME_HDR+0x166>
  4008dc:	38 41 0e             	cmp    %al,0xe(%rcx)
  4008df:	30 41 0e             	xor    %al,0xe(%rcx)
  4008e2:	28 42 0e             	sub    %al,0xe(%rdx)
  4008e5:	20 42 0e             	and    %al,0xe(%rdx)
  4008e8:	18 42 0e             	sbb    %al,0xe(%rdx)
  4008eb:	10 42 0e             	adc    %al,0xe(%rdx)
  4008ee:	08 00                	or     %al,(%rax)
  4008f0:	10 00                	adc    %al,(%rax)
  4008f2:	00 00                	add    %al,(%rax)
  4008f4:	f8                   	clc    
  4008f5:	00 00                	add    %al,(%rax)
  4008f7:	00 78 fe             	add    %bh,-0x2(%rax)
  4008fa:	ff                   	(bad)  
  4008fb:	ff 02                	incl   (%rdx)
  4008fd:	00 00                	add    %al,(%rax)
  4008ff:	00 00                	add    %al,(%rax)
  400901:	00 00                	add    %al,(%rax)
	...

0000000000400904 <__FRAME_END__>:
  400904:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000600dd0 <__frame_dummy_init_array_entry>:
  600dd0:	90                   	nop
  600dd1:	05 40 00 00 00       	add    $0x40,%eax
	...

Disassembly of section .fini_array:

0000000000600dd8 <__do_global_dtors_aux_fini_array_entry>:
  600dd8:	60                   	(bad)  
  600dd9:	05 40 00 00 00       	add    $0x40,%eax
	...

Disassembly of section .dynamic:

0000000000600de0 <_DYNAMIC>:
  600de0:	01 00                	add    %eax,(%rax)
  600de2:	00 00                	add    %al,(%rax)
  600de4:	00 00                	add    %al,(%rax)
  600de6:	00 00                	add    %al,(%rax)
  600de8:	01 00                	add    %eax,(%rax)
  600dea:	00 00                	add    %al,(%rax)
  600dec:	00 00                	add    %al,(%rax)
  600dee:	00 00                	add    %al,(%rax)
  600df0:	01 00                	add    %eax,(%rax)
  600df2:	00 00                	add    %al,(%rax)
  600df4:	00 00                	add    %al,(%rax)
  600df6:	00 00                	add    %al,(%rax)
  600df8:	2c 00                	sub    $0x0,%al
  600dfa:	00 00                	add    %al,(%rax)
  600dfc:	00 00                	add    %al,(%rax)
  600dfe:	00 00                	add    %al,(%rax)
  600e00:	01 00                	add    %eax,(%rax)
  600e02:	00 00                	add    %al,(%rax)
  600e04:	00 00                	add    %al,(%rax)
  600e06:	00 00                	add    %al,(%rax)
  600e08:	36 00 00             	add    %al,%ss:(%rax)
  600e0b:	00 00                	add    %al,(%rax)
  600e0d:	00 00                	add    %al,(%rax)
  600e0f:	00 01                	add    %al,(%rcx)
  600e11:	00 00                	add    %al,(%rax)
  600e13:	00 00                	add    %al,(%rax)
  600e15:	00 00                	add    %al,(%rax)
  600e17:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
  600e1b:	00 00                	add    %al,(%rax)
  600e1d:	00 00                	add    %al,(%rax)
  600e1f:	00 0c 00             	add    %cl,(%rax,%rax,1)
  600e22:	00 00                	add    %al,(%rax)
  600e24:	00 00                	add    %al,(%rax)
  600e26:	00 00                	add    %al,(%rax)
  600e28:	60                   	(bad)  
  600e29:	04 40                	add    $0x40,%al
  600e2b:	00 00                	add    %al,(%rax)
  600e2d:	00 00                	add    %al,(%rax)
  600e2f:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 600e35 <_DYNAMIC+0x55>
  600e35:	00 00                	add    %al,(%rax)
  600e37:	00 74 07 40          	add    %dh,0x40(%rdi,%rax,1)
  600e3b:	00 00                	add    %al,(%rax)
  600e3d:	00 00                	add    %al,(%rax)
  600e3f:	00 19                	add    %bl,(%rcx)
  600e41:	00 00                	add    %al,(%rax)
  600e43:	00 00                	add    %al,(%rax)
  600e45:	00 00                	add    %al,(%rax)
  600e47:	00 d0                	add    %dl,%al
  600e49:	0d 60 00 00 00       	or     $0x60,%eax
  600e4e:	00 00                	add    %al,(%rax)
  600e50:	1b 00                	sbb    (%rax),%eax
  600e52:	00 00                	add    %al,(%rax)
  600e54:	00 00                	add    %al,(%rax)
  600e56:	00 00                	add    %al,(%rax)
  600e58:	08 00                	or     %al,(%rax)
  600e5a:	00 00                	add    %al,(%rax)
  600e5c:	00 00                	add    %al,(%rax)
  600e5e:	00 00                	add    %al,(%rax)
  600e60:	1a 00                	sbb    (%rax),%al
  600e62:	00 00                	add    %al,(%rax)
  600e64:	00 00                	add    %al,(%rax)
  600e66:	00 00                	add    %al,(%rax)
  600e68:	d8 0d 60 00 00 00    	fmuls  0x60(%rip)        # 600ece <_DYNAMIC+0xee>
  600e6e:	00 00                	add    %al,(%rax)
  600e70:	1c 00                	sbb    $0x0,%al
  600e72:	00 00                	add    %al,(%rax)
  600e74:	00 00                	add    %al,(%rax)
  600e76:	00 00                	add    %al,(%rax)
  600e78:	08 00                	or     %al,(%rax)
  600e7a:	00 00                	add    %al,(%rax)
  600e7c:	00 00                	add    %al,(%rax)
  600e7e:	00 00                	add    %al,(%rax)
  600e80:	04 00                	add    $0x0,%al
  600e82:	00 00                	add    %al,(%rax)
  600e84:	00 00                	add    %al,(%rax)
  600e86:	00 00                	add    %al,(%rax)
  600e88:	78 02                	js     600e8c <_DYNAMIC+0xac>
  600e8a:	40 00 00             	add    %al,(%rax)
  600e8d:	00 00                	add    %al,(%rax)
  600e8f:	00 f5                	add    %dh,%ch
  600e91:	fe                   	(bad)  
  600e92:	ff 6f 00             	ljmp   *0x0(%rdi)
  600e95:	00 00                	add    %al,(%rax)
  600e97:	00 a0 02 40 00 00    	add    %ah,0x4002(%rax)
  600e9d:	00 00                	add    %al,(%rax)
  600e9f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 600ea5 <_DYNAMIC+0xc5>
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 38                	add    %bh,(%rax)
  600ea9:	03 40 00             	add    0x0(%rax),%eax
  600eac:	00 00                	add    %al,(%rax)
  600eae:	00 00                	add    %al,(%rax)
  600eb0:	06                   	(bad)  
  600eb1:	00 00                	add    %al,(%rax)
  600eb3:	00 00                	add    %al,(%rax)
  600eb5:	00 00                	add    %al,(%rax)
  600eb7:	00 c0                	add    %al,%al
  600eb9:	02 40 00             	add    0x0(%rax),%al
  600ebc:	00 00                	add    %al,(%rax)
  600ebe:	00 00                	add    %al,(%rax)
  600ec0:	0a 00                	or     (%rax),%al
  600ec2:	00 00                	add    %al,(%rax)
  600ec4:	00 00                	add    %al,(%rax)
  600ec6:	00 00                	add    %al,(%rax)
  600ec8:	78 00                	js     600eca <_DYNAMIC+0xea>
  600eca:	00 00                	add    %al,(%rax)
  600ecc:	00 00                	add    %al,(%rax)
  600ece:	00 00                	add    %al,(%rax)
  600ed0:	0b 00                	or     (%rax),%eax
  600ed2:	00 00                	add    %al,(%rax)
  600ed4:	00 00                	add    %al,(%rax)
  600ed6:	00 00                	add    %al,(%rax)
  600ed8:	18 00                	sbb    %al,(%rax)
  600eda:	00 00                	add    %al,(%rax)
  600edc:	00 00                	add    %al,(%rax)
  600ede:	00 00                	add    %al,(%rax)
  600ee0:	15 00 00 00 00       	adc    $0x0,%eax
	...
  600eed:	00 00                	add    %al,(%rax)
  600eef:	00 03                	add    %al,(%rbx)
	...
  600ef9:	10 60 00             	adc    %ah,0x0(%rax)
  600efc:	00 00                	add    %al,(%rax)
  600efe:	00 00                	add    %al,(%rax)
  600f00:	02 00                	add    (%rax),%al
  600f02:	00 00                	add    %al,(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	30 00                	xor    %al,(%rax)
  600f0a:	00 00                	add    %al,(%rax)
  600f0c:	00 00                	add    %al,(%rax)
  600f0e:	00 00                	add    %al,(%rax)
  600f10:	14 00                	adc    $0x0,%al
  600f12:	00 00                	add    %al,(%rax)
  600f14:	00 00                	add    %al,(%rax)
  600f16:	00 00                	add    %al,(%rax)
  600f18:	07                   	(bad)  
  600f19:	00 00                	add    %al,(%rax)
  600f1b:	00 00                	add    %al,(%rax)
  600f1d:	00 00                	add    %al,(%rax)
  600f1f:	00 17                	add    %dl,(%rdi)
  600f21:	00 00                	add    %al,(%rax)
  600f23:	00 00                	add    %al,(%rax)
  600f25:	00 00                	add    %al,(%rax)
  600f27:	00 30                	add    %dh,(%rax)
  600f29:	04 40                	add    $0x40,%al
  600f2b:	00 00                	add    %al,(%rax)
  600f2d:	00 00                	add    %al,(%rax)
  600f2f:	00 07                	add    %al,(%rdi)
	...
  600f39:	04 40                	add    $0x40,%al
  600f3b:	00 00                	add    %al,(%rax)
  600f3d:	00 00                	add    %al,(%rax)
  600f3f:	00 08                	add    %cl,(%rax)
  600f41:	00 00                	add    %al,(%rax)
  600f43:	00 00                	add    %al,(%rax)
  600f45:	00 00                	add    %al,(%rax)
  600f47:	00 30                	add    %dh,(%rax)
  600f49:	00 00                	add    %al,(%rax)
  600f4b:	00 00                	add    %al,(%rax)
  600f4d:	00 00                	add    %al,(%rax)
  600f4f:	00 09                	add    %cl,(%rcx)
  600f51:	00 00                	add    %al,(%rax)
  600f53:	00 00                	add    %al,(%rax)
  600f55:	00 00                	add    %al,(%rax)
  600f57:	00 18                	add    %bl,(%rax)
  600f59:	00 00                	add    %al,(%rax)
  600f5b:	00 00                	add    %al,(%rax)
  600f5d:	00 00                	add    %al,(%rax)
  600f5f:	00 fe                	add    %bh,%dh
  600f61:	ff                   	(bad)  
  600f62:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f65:	00 00                	add    %al,(%rax)
  600f67:	00 c0                	add    %al,%al
  600f69:	03 40 00             	add    0x0(%rax),%eax
  600f6c:	00 00                	add    %al,(%rax)
  600f6e:	00 00                	add    %al,(%rax)
  600f70:	ff                   	(bad)  
  600f71:	ff                   	(bad)  
  600f72:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f75:	00 00                	add    %al,(%rax)
  600f77:	00 02                	add    %al,(%rdx)
  600f79:	00 00                	add    %al,(%rax)
  600f7b:	00 00                	add    %al,(%rax)
  600f7d:	00 00                	add    %al,(%rax)
  600f7f:	00 f0                	add    %dh,%al
  600f81:	ff                   	(bad)  
  600f82:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f85:	00 00                	add    %al,(%rax)
  600f87:	00 b0 03 40 00 00    	add    %dh,0x4003(%rax)
	...

Disassembly of section .got:

0000000000600ff0 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	e0 0d                	loopne 60100f <_GLOBAL_OFFSET_TABLE_+0xf>
  601002:	60                   	(bad)  
	...
  601017:	00 96 04 40 00 00    	add    %dl,0x4004(%rsi)
  60101d:	00 00                	add    %al,(%rax)
  60101f:	00 a6 04 40 00 00    	add    %ah,0x4004(%rsi)
  601025:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000601028 <__data_start>:
	...

0000000000601030 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601038 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x4003e8>
   a:	74 75                	je     81 <_init-0x4003df>
   c:	20 38                	and    %bh,(%rax)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627548 <_end+0x75026508>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0x4003d1>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	38 2e                	cmp    %ch,(%rsi)
  1f:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  22:	20 38                	and    %bh,(%rax)
  24:	2e 34 2e             	cs xor $0x2e,%al
  27:	30 00                	xor    %al,(%rax)
  29:	63 6c 61 6e          	movslq 0x6e(%rcx,%riz,2),%ebp
  2d:	67 20 76 65          	and    %dh,0x65(%esi)
  31:	72 73                	jb     a6 <_init-0x4003ba>
  33:	69 6f 6e 20 34 2e 30 	imul   $0x302e3420,0x6e(%rdi),%ebp
  3a:	2e 31 20             	xor    %esp,%cs:(%rax)
  3d:	28 74 61 67          	sub    %dh,0x67(%rcx,%riz,2)
  41:	73 2f                	jae    72 <_init-0x4003ee>
  43:	52                   	push   %rdx
  44:	45                   	rex.RB
  45:	4c                   	rex.WR
  46:	45                   	rex.RB
  47:	41 53                	push   %r11
  49:	45 5f                	rex.RB pop %r15
  4b:	34 30                	xor    $0x30,%al
  4d:	31 2f                	xor    %ebp,(%rdi)
  4f:	66 69 6e 61 6c 29    	imul   $0x296c,0x61(%rsi),%bp
	...

Disassembly of section .debug_pubnames:

0000000000000000 <.debug_pubnames>:
   0:	3e 00 00             	add    %al,%ds:(%rax)
   3:	00 02                	add    %al,(%rdx)
   5:	00 00                	add    %al,(%rax)
   7:	00 00                	add    %al,(%rax)
   9:	00 94 01 00 00 0d 01 	add    %dl,0x10d0000(%rcx,%rax,1)
  10:	00 00                	add    %al,(%rax)
  12:	67 65 74 56          	addr32 gs je 6c <_init-0x4003f4>
  16:	61                   	(bad)  
  17:	6c                   	insb   (%dx),%es:(%rdi)
  18:	75 65                	jne    7f <_init-0x4003e1>
  1a:	3c 69                	cmp    $0x69,%al
  1c:	6e                   	outsb  %ds:(%rsi),(%dx)
  1d:	74 3e                	je     5d <_init-0x400403>
  1f:	00 50 01             	add    %dl,0x1(%rax)
  22:	00 00                	add    %al,(%rax)
  24:	67 65 74 56          	addr32 gs je 7e <_init-0x4003e2>
  28:	61                   	(bad)  
  29:	6c                   	insb   (%dx),%es:(%rdi)
  2a:	75 65                	jne    91 <_init-0x4003cf>
  2c:	3c 64                	cmp    $0x64,%al
  2e:	6f                   	outsl  %ds:(%rsi),(%dx)
  2f:	75 62                	jne    93 <_init-0x4003cd>
  31:	6c                   	insb   (%dx),%es:(%rdi)
  32:	65 3e 00 c9          	gs ds add %cl,%cl
  36:	00 00                	add    %al,(%rax)
  38:	00 6d 61             	add    %ch,0x61(%rbp)
  3b:	69 6e 00 00 00 00 00 	imul   $0x0,0x0(%rsi),%ebp

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	90                   	nop
   1:	01 00                	add    %eax,(%rax)
   3:	00 04 00             	add    %al,(%rax,%rax,1)
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 01                	or     %al,(%rcx)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	04 00                	add    $0x0,%al
  12:	2d 00 00 00 00       	sub    $0x0,%eax
  17:	00 00                	add    %al,(%rax)
  19:	00 39                	add    %bh,(%rcx)
  1b:	00 00                	add    %al,(%rax)
  1d:	00 a0 05 40 00 00    	add    %ah,0x4005(%rax)
  23:	00 00                	add    %al,(%rax)
  25:	00 5a 01             	add    %bl,0x1(%rdx)
  28:	00 00                	add    %al,(%rax)
  2a:	02 2f                	add    (%rdi),%ch
  2c:	00 00                	add    %al,(%rax)
  2e:	00 03                	add    %al,(%rbx)
  30:	57                   	push   %rdi
  31:	00 00                	add    %al,(%rax)
  33:	00 04 08             	add    %al,(%rax,%rcx,1)
  36:	02 3b                	add    (%rbx),%bh
  38:	00 00                	add    %al,(%rax)
  3a:	00 03                	add    %al,(%rbx)
  3c:	5e                   	pop    %rsi
  3d:	00 00                	add    %al,(%rax)
  3f:	00 05 04 02 47 00    	add    %al,0x470204(%rip)        # 470249 <__FRAME_END__+0x6f945>
  45:	00 00                	add    %al,(%rax)
  47:	02 4c 00 00          	add    0x0(%rax,%rax,1),%cl
  4b:	00 04 7e             	add    %al,(%rsi,%rdi,2)
  4e:	00 00                	add    %al,(%rax)
  50:	00 20                	add    %ah,(%rax)
  52:	01 14 05 62 00 00 00 	add    %edx,0x62(,%rax,1)
  59:	6d                   	insl   (%dx),%es:(%rdi)
  5a:	00 00                	add    %al,(%rax)
  5c:	00 01                	add    %al,(%rcx)
  5e:	14 00                	adc    $0x0,%al
  60:	05 68 00 00 00       	add    $0x68,%eax
  65:	74 00                	je     67 <_init-0x4003f9>
  67:	00 00                	add    %al,(%rax)
  69:	01 14 08             	add    %edx,(%rax,%rcx,1)
  6c:	00 03                	add    %al,(%rbx)
  6e:	64 00 00             	add    %al,%fs:(%rax)
  71:	00 04 04             	add    %al,(%rsp,%rax,1)
  74:	04 7c                	add    $0x7c,%al
  76:	00 00                	add    %al,(%rax)
  78:	00 18                	add    %bl,(%rax)
  7a:	01 13                	add    %edx,(%rbx)
  7c:	05 6a 00 00 00       	add    $0x6a,%eax
  81:	95                   	xchg   %eax,%ebp
  82:	00 00                	add    %al,(%rax)
  84:	00 01                	add    %al,(%rcx)
  86:	13 00                	adc    (%rax),%eax
  88:	05 75 00 00 00       	add    $0x75,%eax
  8d:	a8 00                	test   $0x0,%al
  8f:	00 00                	add    %al,(%rax)
  91:	01 13                	add    %edx,(%rbx)
  93:	10 00                	adc    %al,(%rax)
  95:	06                   	(bad)  
  96:	3b 00                	cmp    (%rax),%eax
  98:	00 00                	add    %al,(%rax)
  9a:	07                   	(bad)  
  9b:	a1 00 00 00 03 00 08 	movabs 0x6c080003000000,%eax
  a2:	6c 00 
  a4:	00 00                	add    %al,(%rax)
  a6:	08 07                	or     %al,(%rdi)
  a8:	02 ad 00 00 00 03    	add    0x3000000(%rbp),%ch
  ae:	77 00                	ja     b0 <_init-0x4003b0>
  b0:	00 00                	add    %al,(%rax)
  b2:	06                   	(bad)  
  b3:	01 09                	add    %ecx,(%rcx)
  b5:	02 74 00 00          	add    0x0(%rax,%rax,1),%dh
  b9:	00 02                	add    %al,(%rdx)
  bb:	95                   	xchg   %eax,%ebp
  bc:	00 00                	add    %al,(%rax)
  be:	00 02                	add    %al,(%rdx)
  c0:	36 00 00             	add    %al,%ss:(%rax)
  c3:	00 02                	add    %al,(%rdx)
  c5:	2a 00                	sub    (%rax),%al
  c7:	00 00                	add    %al,(%rax)
  c9:	0a a0 05 40 00 00    	or     0x4005(%rax),%ah
  cf:	00 00                	add    %al,(%rax)
  d1:	00 19                	add    %bl,(%rcx)
  d3:	01 00                	add    %eax,(%rax)
  d5:	00 01                	add    %al,(%rcx)
  d7:	56                   	push   %rsi
  d8:	80 00 00             	addb   $0x0,(%rax)
  db:	00 01                	add    %al,(%rcx)
  dd:	22 3b                	and    (%rbx),%bh
  df:	00 00                	add    %al,(%rax)
  e1:	00 0b                	add    %cl,(%rbx)
  e3:	02 91 70 75 00 00    	add    0x7570(%rcx),%dl
  e9:	00 01                	add    %al,(%rcx)
  eb:	24 47                	and    $0x47,%al
  ed:	00 00                	add    %al,(%rax)
  ef:	00 0b                	add    %cl,(%rbx)
  f1:	02 91 68 37 00 00    	add    0x3768(%rcx),%dl
  f7:	00 01                	add    %al,(%rcx)
  f9:	26 36 00 00          	es add %al,%ss:(%rax)
  fd:	00 0b                	add    %cl,(%rbx)
  ff:	02 91 60 d4 00 00    	add    0xd460(%rcx),%dl
 105:	00 01                	add    %al,(%rcx)
 107:	2e 2a 00             	sub    %cs:(%rax),%al
 10a:	00 00                	add    %al,(%rax)
 10c:	00 0c c0             	add    %cl,(%rax,%rax,8)
 10f:	06                   	(bad)  
 110:	40 00 00             	add    %al,(%rax)
 113:	00 00                	add    %al,(%rax)
 115:	00 18                	add    %bl,(%rax)
 117:	00 00                	add    %al,(%rax)
 119:	00 01                	add    %al,(%rcx)
 11b:	56                   	push   %rsi
 11c:	87 00                	xchg   %eax,(%rax)
 11e:	00 00                	add    %al,(%rax)
 120:	9e                   	sahf   
 121:	00 00                	add    %al,(%rax)
 123:	00 01                	add    %al,(%rcx)
 125:	1d 3b 00 00 00       	sbb    $0x3b,%eax
 12a:	0d 02 91 78 d6       	or     $0xd6789102,%eax
 12f:	00 00                	add    %al,(%rax)
 131:	00 01                	add    %al,(%rcx)
 133:	1d 36 00 00 00       	sbb    $0x36,%eax
 138:	0d 02 91 74 da       	or     $0xda749102,%eax
 13d:	00 00                	add    %al,(%rax)
 13f:	00 01                	add    %al,(%rcx)
 141:	1d 3b 00 00 00       	sbb    $0x3b,%eax
 146:	0e                   	(bad)  
 147:	3b 00                	cmp    (%rax),%eax
 149:	00 00                	add    %al,(%rax)
 14b:	85 00                	test   %eax,(%rax)
 14d:	00 00                	add    %al,(%rax)
 14f:	00 0c e0             	add    %cl,(%rax,%riz,8)
 152:	06                   	(bad)  
 153:	40 00 00             	add    %al,(%rax)
 156:	00 00                	add    %al,(%rax)
 158:	00 1a                	add    %bl,(%rdx)
 15a:	00 00                	add    %al,(%rax)
 15c:	00 01                	add    %al,(%rcx)
 15e:	56                   	push   %rsi
 15f:	ac                   	lods   %ds:(%rsi),%al
 160:	00 00                	add    %al,(%rax)
 162:	00 c3                	add    %al,%bl
 164:	00 00                	add    %al,(%rax)
 166:	00 01                	add    %al,(%rcx)
 168:	1d 2f 00 00 00       	sbb    $0x2f,%eax
 16d:	0d 02 91 78 d6       	or     $0xd6789102,%eax
 172:	00 00                	add    %al,(%rax)
 174:	00 01                	add    %al,(%rcx)
 176:	1d 2a 00 00 00       	sbb    $0x2a,%eax
 17b:	0d 02 91 74 da       	or     $0xda749102,%eax
 180:	00 00                	add    %al,(%rax)
 182:	00 01                	add    %al,(%rcx)
 184:	1d 3b 00 00 00       	sbb    $0x3b,%eax
 189:	0e                   	(bad)  
 18a:	2f                   	(bad)  
 18b:	00 00                	add    %al,(%rax)
 18d:	00 85 00 00 00 00    	add    %al,0x0(%rbp)
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%rcx)
   2:	01 25 0e 13 05 03    	add    %esp,0x305130e(%rip)        # 3051316 <_end+0x2a502d6>
   8:	0e                   	(bad)  
   9:	10 17                	adc    %dl,(%rdi)
   b:	1b 0e                	sbb    (%rsi),%ecx
   d:	11 01                	adc    %eax,(%rcx)
   f:	12 06                	adc    (%rsi),%al
  11:	00 00                	add    %al,(%rax)
  13:	02 0f                	add    (%rdi),%cl
  15:	00 49 13             	add    %cl,0x13(%rcx)
  18:	00 00                	add    %al,(%rax)
  1a:	03 24 00             	add    (%rax,%rax,1),%esp
  1d:	03 0e                	add    (%rsi),%ecx
  1f:	3e 0b 0b             	or     %ds:(%rbx),%ecx
  22:	0b 00                	or     (%rax),%eax
  24:	00 04 13             	add    %al,(%rbx,%rdx,1)
  27:	01 03                	add    %eax,(%rbx)
  29:	0e                   	(bad)  
  2a:	0b 0b                	or     (%rbx),%ecx
  2c:	3a 0b                	cmp    (%rbx),%cl
  2e:	3b 0b                	cmp    (%rbx),%ecx
  30:	00 00                	add    %al,(%rax)
  32:	05 0d 00 03 0e       	add    $0xe03000d,%eax
  37:	49 13 3a             	adc    (%r10),%rdi
  3a:	0b 3b                	or     (%rbx),%edi
  3c:	0b 38                	or     (%rax),%edi
  3e:	0b 00                	or     (%rax),%eax
  40:	00 06                	add    %al,(%rsi)
  42:	01 01                	add    %eax,(%rcx)
  44:	49 13 00             	adc    (%r8),%rax
  47:	00 07                	add    %al,(%rdi)
  49:	21 00                	and    %eax,(%rax)
  4b:	49 13 37             	adc    (%r15),%rsi
  4e:	0b 00                	or     (%rax),%eax
  50:	00 08                	add    %cl,(%rax)
  52:	24 00                	and    $0x0,%al
  54:	03 0e                	add    (%rsi),%ecx
  56:	0b 0b                	or     (%rbx),%ecx
  58:	3e 0b 00             	or     %ds:(%rax),%eax
  5b:	00 09                	add    %cl,(%rcx)
  5d:	0f 00 00             	sldt   (%rax)
  60:	00 0a                	add    %cl,(%rdx)
  62:	2e 01 11             	add    %edx,%cs:(%rcx)
  65:	01 12                	add    %edx,(%rdx)
  67:	06                   	(bad)  
  68:	40 18 03             	sbb    %al,(%rbx)
  6b:	0e                   	(bad)  
  6c:	3a 0b                	cmp    (%rbx),%cl
  6e:	3b 0b                	cmp    (%rbx),%ecx
  70:	49 13 3f             	adc    (%r15),%rdi
  73:	19 00                	sbb    %eax,(%rax)
  75:	00 0b                	add    %cl,(%rbx)
  77:	34 00                	xor    $0x0,%al
  79:	02 18                	add    (%rax),%bl
  7b:	03 0e                	add    (%rsi),%ecx
  7d:	3a 0b                	cmp    (%rbx),%cl
  7f:	3b 0b                	cmp    (%rbx),%ecx
  81:	49 13 00             	adc    (%r8),%rax
  84:	00 0c 2e             	add    %cl,(%rsi,%rbp,1)
  87:	01 11                	add    %edx,(%rcx)
  89:	01 12                	add    %edx,(%rdx)
  8b:	06                   	(bad)  
  8c:	40 18 6e 0e          	sbb    %bpl,0xe(%rsi)
  90:	03 0e                	add    (%rsi),%ecx
  92:	3a 0b                	cmp    (%rbx),%cl
  94:	3b 0b                	cmp    (%rbx),%ecx
  96:	49 13 00             	adc    (%r8),%rax
  99:	00 0d 05 00 02 18    	add    %cl,0x18020005(%rip)        # 180200a4 <_end+0x17a1f064>
  9f:	03 0e                	add    (%rsi),%ecx
  a1:	3a 0b                	cmp    (%rbx),%cl
  a3:	3b 0b                	cmp    (%rbx),%ecx
  a5:	49 13 00             	adc    (%r8),%rax
  a8:	00 0e                	add    %cl,(%rsi)
  aa:	2f                   	(bad)  
  ab:	00 49 13             	add    %cl,0x13(%rcx)
  ae:	03 0e                	add    (%rsi),%ecx
  b0:	00 00                	add    %al,(%rax)
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	cf                   	iret   
   1:	00 00                	add    %al,(%rax)
   3:	00 02                	add    %al,(%rdx)
   5:	00 22                	add    %ah,(%rdx)
   7:	00 00                	add    %al,(%rax)
   9:	00 01                	add    %al,(%rcx)
   b:	01 fb                	add    %edi,%ebx
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%rax)
  15:	00 00                	add    %al,(%rax)
  17:	01 00                	add    %eax,(%rax)
  19:	00 01                	add    %al,(%rcx)
  1b:	00 45 78             	add    %al,0x78(%rbp)
  1e:	61                   	(bad)  
  1f:	6d                   	insl   (%dx),%es:(%rdi)
  20:	70 6c                	jo     8e <_init-0x4003d2>
  22:	65 2e 63 70 70       	gs movslq %cs:0x70(%rax),%esi
  27:	00 00                	add    %al,(%rax)
  29:	00 00                	add    %al,(%rax)
  2b:	00 00                	add    %al,(%rax)
  2d:	09 02                	or     %eax,(%rdx)
  2f:	a0 05 40 00 00 00 00 	movabs 0x300000000004005,%al
  36:	00 03 
  38:	22 01                	and    (%rcx),%al
  3a:	05 0c 0a 08 59       	add    $0x59080a0c,%eax
  3f:	05 08 06 08 20       	add    $0x20080608,%eax
  44:	05 05 06 4b 05       	add    $0x54b0605,%eax
  49:	12 06                	adc    (%rsi),%al
  4b:	4a 05 0e 06 9f 05    	rex.WX add $0x59f060e,%rax
  51:	14 06                	adc    $0x6,%al
  53:	9e                   	sahf   
  54:	05 0a 4a 05 13       	add    $0x13054a0a,%eax
  59:	06                   	(bad)  
  5a:	4c 05 05 06 4a 05    	rex.WR add $0x54a0605,%rax
  60:	13 06                	adc    (%rsi),%eax
  62:	e5 05                	in     $0x5,%eax
  64:	05 06 4a 05 13       	add    $0x13054a06,%eax
  69:	06                   	(bad)  
  6a:	08 4b 05             	or     %cl,0x5(%rbx)
  6d:	05 06 4a 05 13       	add    $0x13054a06,%eax
  72:	06                   	(bad)  
  73:	08 4b 05             	or     %cl,0x5(%rbx)
  76:	05 06 4a 05 13       	add    $0x13054a06,%eax
  7b:	06                   	(bad)  
  7c:	08 4b 05             	or     %cl,0x5(%rbx)
  7f:	05 06 4a 05 1b       	add    $0x1b054a06,%eax
  84:	06                   	(bad)  
  85:	08 22                	or     %ah,(%rdx)
  87:	05 0d 06 4a 05       	add    $0x54a060d,%eax
  8c:	16                   	(bad)  
  8d:	06                   	(bad)  
  8e:	4c 05 05 06 4a 05    	rex.WR add $0x54a0605,%rax
  94:	0e                   	(bad)  
  95:	06                   	(bad)  
  96:	ca 05 05             	lret   $0x505
  99:	06                   	(bad)  
  9a:	4a 00 02             	rex.WX add %al,(%rdx)
  9d:	04 01                	add    $0x1,%al
  9f:	08 2e                	or     %ch,(%rsi)
  a1:	00 02                	add    %al,(%rdx)
  a3:	04 01                	add    $0x1,%al
  a5:	03 4e ba             	add    -0x46(%rsi),%ecx
  a8:	05 13 06 03 34       	add    $0x34030613,%eax
  ad:	2e 05 05 06 4a 06    	cs add $0x64a0605,%eax
  b3:	bc 05 00 03 68       	mov    $0x68030005,%esp
  b8:	08 20                	or     %ah,(%rax)
  ba:	05 0c 0a ad 05       	add    $0x5ad0a0c,%eax
  bf:	05 06 ac 05 00       	add    $0x5ac06,%eax
  c4:	06                   	(bad)  
  c5:	9d                   	popfq  
  c6:	05 0c 0a ad 05       	add    $0x5ad0a0c,%eax
  cb:	05 06 c8 02 02       	add    $0x202c806,%eax
  d0:	00 01                	add    %al,(%rcx)
  d2:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	63 6c 61 6e          	movslq 0x6e(%rcx,%riz,2),%ebp
   4:	67 20 76 65          	and    %dh,0x65(%esi)
   8:	72 73                	jb     7d <_init-0x4003e3>
   a:	69 6f 6e 20 34 2e 30 	imul   $0x302e3420,0x6e(%rdi),%ebp
  11:	2e 31 20             	xor    %esp,%cs:(%rax)
  14:	28 74 61 67          	sub    %dh,0x67(%rcx,%riz,2)
  18:	73 2f                	jae    49 <_init-0x400417>
  1a:	52                   	push   %rdx
  1b:	45                   	rex.RB
  1c:	4c                   	rex.WR
  1d:	45                   	rex.RB
  1e:	41 53                	push   %r11
  20:	45 5f                	rex.RB pop %r15
  22:	34 30                	xor    $0x30,%al
  24:	31 2f                	xor    %ebp,(%rdi)
  26:	66 69 6e 61 6c 29    	imul   $0x296c,0x61(%rsi),%bp
  2c:	00 45 78             	add    %al,0x78(%rbp)
  2f:	61                   	(bad)  
  30:	6d                   	insl   (%dx),%es:(%rdi)
  31:	70 6c                	jo     9f <_init-0x4003c1>
  33:	65 2e 63 70 70       	gs movslq %cs:0x70(%rax),%esi
  38:	00 2f                	add    %ch,(%rdi)
  3a:	68 6f 6d 65 2f       	pushq  $0x2f656d6f
  3f:	64 61                	fs (bad) 
  41:	6e                   	outsb  %ds:(%rsi),(%dx)
  42:	74 65                	je     a9 <_init-0x4003b7>
  44:	2f                   	(bad)  
  45:	45                   	rex.RB
  46:	66 66 65 63 74 69 76 	data16 movslq %gs:0x76(%rcx,%rbp,2),%si
  4d:	65 53                	gs push %rbx
  4f:	61                   	(bad)  
  50:	6e                   	outsb  %ds:(%rsi),(%dx)
  51:	2f                   	(bad)  
  52:	74 65                	je     b9 <_init-0x4003a7>
  54:	73 74                	jae    ca <_init-0x400396>
  56:	00 64 6f 75          	add    %ah,0x75(%rdi,%rbp,2)
  5a:	62                   	(bad)  
  5b:	6c                   	insb   (%dx),%es:(%rdi)
  5c:	65 00 69 6e          	add    %ch,%gs:0x6e(%rcx)
  60:	74 00                	je     62 <_init-0x4003fe>
  62:	66 00 66 6c          	data16 add %ah,0x6c(%rsi)
  66:	6f                   	outsl  %ds:(%rsi),(%dx)
  67:	61                   	(bad)  
  68:	74 00                	je     6a <_init-0x4003f6>
  6a:	61                   	(bad)  
  6b:	00 73 69             	add    %dh,0x69(%rbx)
  6e:	7a 65                	jp     d5 <_init-0x40038b>
  70:	74 79                	je     eb <_init-0x400375>
  72:	70 65                	jo     d9 <_init-0x400387>
  74:	00 73 00             	add    %dh,0x0(%rbx)
  77:	63 68 61             	movslq 0x61(%rax),%ebp
  7a:	72 00                	jb     7c <_init-0x4003e4>
  7c:	54                   	push   %rsp
  7d:	00 53 00             	add    %dl,0x0(%rbx)
  80:	6d                   	insl   (%dx),%es:(%rdi)
  81:	61                   	(bad)  
  82:	69 6e 00 55 00 5f 5a 	imul   $0x5a5f0055,0x0(%rsi),%ebp
  89:	4c 38 67 65          	rex.WR cmp %r12b,0x65(%rdi)
  8d:	74 56                	je     e5 <_init-0x40037b>
  8f:	61                   	(bad)  
  90:	6c                   	insb   (%dx),%es:(%rdi)
  91:	75 65                	jne    f8 <_init-0x400368>
  93:	49 69 45 54 5f 50 53 	imul   $0x3053505f,0x54(%r13),%rax
  9a:	30 
  9b:	5f                   	pop    %rdi
  9c:	69 00 67 65 74 56    	imul   $0x56746567,(%rax),%eax
  a2:	61                   	(bad)  
  a3:	6c                   	insb   (%dx),%es:(%rdi)
  a4:	75 65                	jne    10b <_init-0x400355>
  a6:	3c 69                	cmp    $0x69,%al
  a8:	6e                   	outsb  %ds:(%rsi),(%dx)
  a9:	74 3e                	je     e9 <_init-0x400377>
  ab:	00 5f 5a             	add    %bl,0x5a(%rdi)
  ae:	4c 38 67 65          	rex.WR cmp %r12b,0x65(%rdi)
  b2:	74 56                	je     10a <_init-0x400356>
  b4:	61                   	(bad)  
  b5:	6c                   	insb   (%dx),%es:(%rdi)
  b6:	75 65                	jne    11d <_init-0x400343>
  b8:	49                   	rex.WB
  b9:	64 45 54             	fs rex.RB push %r12
  bc:	5f                   	pop    %rdi
  bd:	50                   	push   %rax
  be:	53                   	push   %rbx
  bf:	30 5f 69             	xor    %bl,0x69(%rdi)
  c2:	00 67 65             	add    %ah,0x65(%rdi)
  c5:	74 56                	je     11d <_init-0x400343>
  c7:	61                   	(bad)  
  c8:	6c                   	insb   (%dx),%es:(%rdi)
  c9:	75 65                	jne    130 <_init-0x400330>
  cb:	3c 64                	cmp    $0x64,%al
  cd:	6f                   	outsl  %ds:(%rsi),(%dx)
  ce:	75 62                	jne    132 <_init-0x40032e>
  d0:	6c                   	insb   (%dx),%es:(%rdi)
  d1:	65 3e 00 71 00       	gs add %dh,%ds:0x0(%rcx)
  d6:	70 74                	jo     14c <_init-0x400314>
  d8:	72 00                	jb     da <_init-0x400386>
  da:	69                   	.byte 0x69
  db:	64 78 00             	fs js  de <_init-0x400382>

Disassembly of section .debug_macinfo:

0000000000000000 <.debug_macinfo>:
	...

Disassembly of section .debug_pubtypes:

0000000000000000 <.debug_pubtypes>:
   0:	40 00 00             	add    %al,(%rax)
   3:	00 02                	add    %al,(%rdx)
   5:	00 00                	add    %al,(%rax)
   7:	00 00                	add    %al,(%rax)
   9:	00 94 01 00 00 4c 00 	add    %dl,0x4c0000(%rcx,%rax,1)
  10:	00 00                	add    %al,(%rax)
  12:	53                   	push   %rbx
  13:	00 74 00 00          	add    %dh,0x0(%rax,%rax,1)
  17:	00 54 00 6d          	add    %dl,0x6d(%rax,%rax,1)
  1b:	00 00                	add    %al,(%rax)
  1d:	00 66 6c             	add    %ah,0x6c(%rsi)
  20:	6f                   	outsl  %ds:(%rsi),(%dx)
  21:	61                   	(bad)  
  22:	74 00                	je     24 <_init-0x40043c>
  24:	2f                   	(bad)  
  25:	00 00                	add    %al,(%rax)
  27:	00 64 6f 75          	add    %ah,0x75(%rdi,%rbp,2)
  2b:	62                   	(bad)  
  2c:	6c                   	insb   (%dx),%es:(%rdi)
  2d:	65 00 3b             	add    %bh,%gs:(%rbx)
  30:	00 00                	add    %al,(%rax)
  32:	00 69 6e             	add    %ch,0x6e(%rcx)
  35:	74 00                	je     37 <_init-0x400429>
  37:	ad                   	lods   %ds:(%rsi),%eax
  38:	00 00                	add    %al,(%rax)
  3a:	00 63 68             	add    %ah,0x68(%rbx)
  3d:	61                   	(bad)  
  3e:	72 00                	jb     40 <_init-0x400420>
  40:	00 00                	add    %al,(%rax)
	...
